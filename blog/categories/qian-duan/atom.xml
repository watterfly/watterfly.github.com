<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: 前端 | Doctor Insane]]></title>
  <link href="http://fengsanity.com/blog/categories/qian-duan/atom.xml" rel="self"/>
  <link href="http://fengsanity.com/"/>
  <updated>2013-09-06T20:25:21+08:00</updated>
  <id>http://fengsanity.com/</id>
  <author>
    <name><![CDATA[Feng Sanity]]></name>
    <email><![CDATA[mrfenglingyu@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[javascript定时器探究]]></title>
    <link href="http://fengsanity.com/blog/2013/05/20/game/"/>
    <updated>2013-05-20T23:34:00+08:00</updated>
    <id>http://fengsanity.com/blog/2013/05/20/game</id>
    <content type="html"><![CDATA[<p> 想起js中也有个定时器，试着做了个好玩的小把戏，缓解一下心情，点击按钮就可以看到了 <!--more--></p>




<br />


<p><input id = "flyTrigger" type = "button" value = "start" style=" width:80px; height: 35px; border-width: 0; background-color: #ebebeb; border-radius: 5px; color: #666; font-size: 1.3em;" /></p>

<div id = "flyBlock" style = "position: absolute;  width: 64px; height: 64px; left: 150px; top: 212px; border-radius: 32px; background-image: url(/images/article/earth.jpg); full-article " > </div>


<br /><br /><br />


<p> Windows下定时器是基于消息的，而javascript中定时器的运行原理却很少提到，经过分析是将任务定时插入执行队列的原理，毕竟javascript是单线程机制。 </p>


<p> 小球可以朝随机方向移动，碰到无形的墙壁后会反弹。可以利用它做个“是男人就坚持XX秒”的游戏，不过得好好设计下反弹算法和实时测距算法。噢，它由原生js实现，没考虑太多请况，请用chrome等浏览器吧。 </p>


<br /><br />




<h2>有问题反馈</h2>




<p>访问中有任何问题，欢迎反馈给我，可以用以下联系方式跟我交流。</p>




<ul>
    <li>邮件(mrfenglingyu#gmail.com, 把#换成@)</li>
</ul>




<script type="text/javascript">
//&lt;![CDATA[

    var randomAngle;

    function catchEvent(eventObj, event, eventHandler) 
    {
        if (eventObj.addEventListener) {
            eventObj.addEventListener(event, eventHandler, false);
        } else if (eventObj.attachEvent) {
            eventObj.attachEvent("on" + event, eventHandler);
        }
    }

    function getStyle(obj, jsprop, cssprop)
    {
        if (obj.currentStyle) {
            return obj.jsprop;
        } else if (window.getComputedStyle) {
            return document.defaultView.getComputedStyle(obj, null).getPropertyValue(cssprop);
        }
    }

    function linearFly()
    {
        var flyTag = document.getElementById("flyBlock");

        var topStr = new String(document.defaultView.getComputedStyle(flyTag, null).getPropertyValue("top"));
        var leftStr = new String(document.defaultView.getComputedStyle(flyTag, null).getPropertyValue("left"));
        var topNum = Number(topStr.substr(0, topStr.length - 2));
        var leftNum = Number(leftStr.substr(0, leftStr.length - 2));

        var windowWidth = document.body.clientWidth;
        var windowHeight = window.innerHeight;


        if (topNum <= 0 && randomAngle < 180) {
            randomAngle += 2 * (180 - randomAngle);
        }
        if (topNum >= (windowHeight - 64) && randomAngle > 180) {
            randomAngle -= 2 * (randomAngle - 180);
        }
        if (leftNum <= 0 && randomAngle > 90 && randomAngle < 270) {
           if (randomAngle < 180) {
                randomAngle = 180 - randomAngle;
            } else {
                randomAngle += 2 * (270 - randomAngle);
            }
        }
        if (leftNum >= (windowWidth - 64) && (randomAngle < 90 || randomAngle > 270)) {
            if (randomAngle <= 90) {
                randomAngle = 180 - randomAngle;
            } else {
                randomAngle -= 2 * (randomAngle - 270);
            }
        }

        if (90 == randomAngle) {
            randomAngle = 89;
        }
        if (270 == randomAngle) {
            randomAngle = 269;
        }
        var randomTan = Math.tan(randomAngle * 0.017453293);

        var xAxis, yAxis;
        if (Math.abs(randomTan) > 1) {
            if (randomAngle < 90) {
                xAxis = 1;
                yAxis = parseInt(Math.abs(randomTan));
            } else if (randomAngle < 180) {
                xAxis = -1;
                yAxis = parseInt(Math.abs(randomTan));
            } else if (randomAngle < 270) {
                xAxis = -1;
                yAxis = -1 * parseInt(Math.abs(randomTan));
            } else {
                xAxis = 1;
                yAxis = -1 * parseInt(Math.abs(randomTan));
            }
        } else {
            if (randomAngle < 90) {
                xAxis = parseInt(1 / Math.abs(randomTan));
                yAxis = 1;
            } else if (randomAngle < 180) {
                xAxis = -1 * parseInt(1 / Math.abs(randomTan));
                yAxis = 1;
            } else if (randomAngle < 270) {
                xAxis = -1 * parseInt(1 / Math.abs(randomTan));
                yAxis = -1;
            } else {
                xAxis = parseInt(1 / Math.abs(randomTan));
                yAxis = -1;
            }
        }

        if (xAxis > 10) {
            xAxis = 10;
        } else if (xAxis < -10) {
            xAxis = -10;
        }

        if (yAxis > 10) {
            yAxis = 10;
        } else if (yAxis < -10) {
            yAxis = -10;
        }

        flyTag.style.left = leftNum + xAxis + "px";
        flyTag.style.top = topNum - yAxis + "px";
    }

    function init() 
    {
        ;
    }

    catchEvent(window, "load", init);

    var tmOut;
    var startTag = document.getElementById("flyTrigger");
    catchEvent(startTag, "click", function(){
        if ("start" == startTag.value) {
            startTag.value = "stop";

            randomAngle = parseInt(Math.random() * 360);
            tmOut = setInterval(linearFly, 5);
        } else if ("stop" == startTag.value) {
            startTag.value = "start";
            clearInterval(tmOut);
        }
    });

    catchEvent(startTag, "mouseover", function(){
        startTag.style.backgroundColor = "#0181eb";
        startTag.style.color = "#f8f8f8";
    });

    catchEvent(startTag, "mouseout", function(){
        startTag.style.backgroundColor = "#ebebeb";
        startTag.style.color = "#666";
    });

//]]&gt;
</script>

]]></content>
  </entry>
  
</feed>
